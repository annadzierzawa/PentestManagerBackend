using Application.Commands;
using Application.DTOs;
using Domain.Entities;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Application.Services
{
    public class PentestsService : IPentestsService
    {
        private readonly PentestManagerContext _context;

        public PentestsService(PentestManagerContext context)
        {
            _context = context;
        }

        public async Task AddReport(AddReportCommand command)
        {
            var report = new PentestReport(
                command.SystemName,
                command.TestDate,
                command.Testers,
                command.ReportVersion,
                command.TestsSpecification,
                command.TestsConclusions,
                command.TestsVulnerabilities,
                command.TechnicalSummary,
                command.RecommendedChanges,
                command.Vulnerabilities.Select(x=>new Vulnerability(x.Description,x.FixRecommendation)).ToList());

            await _context.PentestReports.AddAsync(report);

            await _context.SaveChangesAsync();
        }

        public async Task<List<ReportDTO>> GetReports()
        {
            var result = await _context.PentestReports.ToListAsync();

            return result.Select(x => new ReportDTO()
            {
                Id = x.Id,
                ReportVersion = x.ReportVersion,
                SystemName = x.SystemName,
                TestDate = x.TestDate
            }).ToList();
        }
    }
}
